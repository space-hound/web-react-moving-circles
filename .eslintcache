[{"C:\\Users\\Space Hound\\Desktop\\Projects\\web-react-moving-circles\\src\\index.js":"1","C:\\Users\\Space Hound\\Desktop\\Projects\\web-react-moving-circles\\src\\reportWebVitals.js":"2","C:\\Users\\Space Hound\\Desktop\\Projects\\web-react-moving-circles\\src\\utils\\options.js":"3","C:\\Users\\Space Hound\\Desktop\\Projects\\web-react-moving-circles\\src\\utils\\actions.js":"4","C:\\Users\\Space Hound\\Desktop\\Projects\\web-react-moving-circles\\src\\utils\\random.js":"5","C:\\Users\\Space Hound\\Desktop\\Projects\\web-react-moving-circles\\src\\components\\Board\\Board.jsx":"6","C:\\Users\\Space Hound\\Desktop\\Projects\\web-react-moving-circles\\src\\components\\Controls\\Controls.jsx":"7","C:\\Users\\Space Hound\\Desktop\\Projects\\web-react-moving-circles\\src\\components\\Circle\\Circle.jsx":"8","C:\\Users\\Space Hound\\Desktop\\Projects\\web-react-moving-circles\\src\\components\\Numeric\\Numeric.jsx":"9","C:\\Users\\Space Hound\\Desktop\\Projects\\web-react-moving-circles\\src\\components\\Slider\\Slider.jsx":"10","C:\\Users\\Space Hound\\Desktop\\Projects\\web-react-moving-circles\\src\\components\\PausePlayButton\\PausePlayButton.jsx":"11","C:\\Users\\Space Hound\\Desktop\\Projects\\web-react-moving-circles\\src\\components\\Checkbox\\Checkbox.jsx":"12"},{"size":523,"mtime":1607001746763,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":175,"mtime":1607001334555,"results":"16","hashOfConfig":"14"},{"size":2706,"mtime":1607000477160,"results":"17","hashOfConfig":"14"},{"size":413,"mtime":1606997881598,"results":"18","hashOfConfig":"14"},{"size":5431,"mtime":1607003624808,"results":"19","hashOfConfig":"14"},{"size":3578,"mtime":1607004352743,"results":"20","hashOfConfig":"14"},{"size":463,"mtime":1607003416422,"results":"21","hashOfConfig":"14"},{"size":618,"mtime":1607004444755,"results":"22","hashOfConfig":"14"},{"size":705,"mtime":1607004408322,"results":"23","hashOfConfig":"14"},{"size":355,"mtime":1607004388553,"results":"24","hashOfConfig":"14"},{"size":521,"mtime":1607004475520,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ib9qic",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Space Hound\\Desktop\\Projects\\web-react-moving-circles\\src\\index.js",[],"C:\\Users\\Space Hound\\Desktop\\Projects\\web-react-moving-circles\\src\\reportWebVitals.js",[],["52","53"],"C:\\Users\\Space Hound\\Desktop\\Projects\\web-react-moving-circles\\src\\utils\\options.js",[],"C:\\Users\\Space Hound\\Desktop\\Projects\\web-react-moving-circles\\src\\utils\\actions.js",["54"],"import { getRndInt, getRndBinary, getRndColor } from './random';\r\nimport { SIZE, SPEED } from './options'\r\n\r\nexport default {\r\n\r\n    createCircle(xBound, yBound) {\r\n        const color = getRndColor();\r\n        const ogSize = getRndInt(SIZE.min, SIZE.max);\r\n        const size = ogSize;\r\n        const dSize = Math.floor(size / 2); \r\n        const ogSpeed = getRndInt(SPEED.min, SPEED.max);\r\n        const speed = ogSpeed;\r\n        const xP = getRndInt(\r\n            0 + size,\r\n            xBound - size\r\n        );\r\n        const yP = getRndInt(\r\n            0 + size,\r\n            yBound - size\r\n        );\r\n        const xD = getRndBinary();\r\n        const yD = getRndBinary();\r\n        return { color, ogSize, size, dSize, ogSpeed, speed, xP, yP, xD, yD };\r\n    },\r\n\r\n    createCircles({ circlesCount, xBound, yBound }) {\r\n        return [...new Array(circlesCount)].map(() => {\r\n            return this.createCircle(xBound, yBound);\r\n        });\r\n    },\r\n\r\n    move(circle, xBound, yBound) {\r\n        circle.xP += circle.xD * circle.speed;\r\n        circle.yP += circle.yD * circle.speed;\r\n        if (circle.xP <= 0 + circle.dSize) {\r\n            circle.xP = 0 + circle.dSize;\r\n            circle.xD *= -1;\r\n        }\r\n        if (circle.xP >= xBound - circle.dSize) {\r\n            circle.xP = xBound - circle.dSize;\r\n            circle.xD *= -1;\r\n        }\r\n        if (circle.yP <= 0 + circle.dSize) {\r\n            circle.yP = 0 + circle.dSize;\r\n            circle.yD *= -1;\r\n        }\r\n        if (circle.yP >= yBound - circle.dSize) {\r\n            circle.yP = yBound - circle.dSize;\r\n            circle.yD *= -1;\r\n        }\r\n    },\r\n\r\n    moveCircles({ circles, xBound, yBound }) {\r\n        circles.forEach((circle) => {\r\n            this.move(circle, xBound, yBound);\r\n        });\r\n    },\r\n\r\n    toggleBlock(circle) {\r\n        circle.isBlocked = !circle.isBlocked;\r\n    },\r\n\r\n    toggleBlockCircles({ circles }) {\r\n        circles.forEach((circle) => {\r\n            this.toggleBlock(circle);\r\n        });\r\n    },\r\n\r\n    modDir(circle) {\r\n        if(getRndBinary() === 1) {\r\n            circle.xD *= -1;\r\n        } else {\r\n            circle.yD *= -1;\r\n        }\r\n    },\r\n\r\n    modColor(circle) {\r\n        circle.color = getRndColor();\r\n    },\r\n\r\n    modSpeed(circle, value) {\r\n        circle.speed = circle.ogSpeed + (circle.ogSpeed * (value / 100));\r\n    },\r\n\r\n    modSize(circle, value) {\r\n        const size = circle.ogSize + (circle.ogSize * (value / 100));\r\n        circle.size = size;\r\n        circle.dSize = Math.floor(size / 2);\r\n    },\r\n\r\n    modCircles(action, value, { circles }) {\r\n        circles.forEach((circle) => {\r\n            this[action](circle, value);\r\n        });\r\n    }\r\n}","C:\\Users\\Space Hound\\Desktop\\Projects\\web-react-moving-circles\\src\\utils\\random.js",[],"C:\\Users\\Space Hound\\Desktop\\Projects\\web-react-moving-circles\\src\\components\\Board\\Board.jsx",[],"C:\\Users\\Space Hound\\Desktop\\Projects\\web-react-moving-circles\\src\\components\\Controls\\Controls.jsx",["55"],"C:\\Users\\Space Hound\\Desktop\\Projects\\web-react-moving-circles\\src\\components\\Circle\\Circle.jsx",[],"C:\\Users\\Space Hound\\Desktop\\Projects\\web-react-moving-circles\\src\\components\\Numeric\\Numeric.jsx",[],"C:\\Users\\Space Hound\\Desktop\\Projects\\web-react-moving-circles\\src\\components\\Slider\\Slider.jsx",[],"C:\\Users\\Space Hound\\Desktop\\Projects\\web-react-moving-circles\\src\\components\\PausePlayButton\\PausePlayButton.jsx",[],"C:\\Users\\Space Hound\\Desktop\\Projects\\web-react-moving-circles\\src\\components\\Checkbox\\Checkbox.jsx",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":4,"column":1,"nodeType":"62","endLine":96,"endColumn":2},{"ruleId":"63","severity":1,"message":"64","line":108,"column":25,"nodeType":"65","endLine":108,"endColumn":55},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]